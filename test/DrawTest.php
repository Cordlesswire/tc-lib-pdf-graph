<?php
/**
 * DrawTest.php
 *
 * @since       2011-05-23
 * @category    Library
 * @package     PdfGraph
 * @author      Nicola Asuni <info@tecnick.com>
 * @copyright   2011-2015 Nicola Asuni - Tecnick.com LTD
 * @license     http://www.gnu.org/copyleft/lesser.html GNU-LGPL v3 (see LICENSE.TXT)
 * @link        https://github.com/tecnickcom/tc-lib-pdf-graph
 *
 * This file is part of tc-lib-pdf-graph software library.
 */

namespace Test;

/**
 * Draw Test
 *
 * @since       2011-05-23
 * @category    Library
 * @package     PdfGraph
 * @author      Nicola Asuni <info@tecnick.com>
 * @copyright   2011-2015 Nicola Asuni - Tecnick.com LTD
 * @license     http://www.gnu.org/copyleft/lesser.html GNU-LGPL v3 (see LICENSE.TXT)
 * @link        https://github.com/tecnickcom/tc-lib-pdf-graph
 */
class DrawTest extends \PHPUnit_Framework_TestCase
{
    protected $obj = null;
    protected $style = array();

    public function setUp()
    {
        //$this->markTestSkipped(); // skip this test
        $this->obj = new \Com\Tecnick\Pdf\Graph\Draw(0.75, 100, new \Com\Tecnick\Color\Pdf());
        $this->style = array(
            'lineWidth'  => 3,
            'lineCap'    => 'round',
            'lineJoin'   => 'bevel',
            'miterLimit' => 11,
            'dashArray'  => array(5, 7),
            'dashPhase'  => 1,
            'lineColor'  => 'greenyellow',
            'fillColor'  => '["RGB",0.250000,0.500000,0.750000]',
        );
    }

    public function testGetLine()
    {
        $res = $this->obj->getLine(3, 5, 7, 11);
        $this->assertEquals(
            '2.250000 71.250000 m'."\n"
            .'5.250000 66.750000 l'."\n"
            .'S'."\n",
            $res
        );

        $res = $this->obj->getLine(3, 5, 7, 11, $this->style);
        $this->assertEquals(
            '2.250000 w'."\n"
            .'1 J'."\n"
            .'2 j'."\n"
            .'8.250000 M'."\n"
            .'[3.750000 5.250000] 0.750000 d'."\n"
            .'0.678431 1.000000 0.184314 RG'."\n"
            .'0.250000 0.500000 0.750000 rg'."\n"
            .'2.250000 71.250000 m'."\n"
            .'5.250000 66.750000 l'."\n"
            .'S'."\n",
            $res
        );
    }

    public function testGetCurve()
    {
        $res = $this->obj->getCurve(3, 5, 7, 11, 13, 17, 19, 23);
        $this->assertEquals(
            '2.250000 71.250000 m'."\n"
            .'5.250000 66.750000 9.750000 62.250000 14.250000 57.750000 c'."\n"
            .'S'."\n",
            $res
        );

        $res = $this->obj->getCurve(3, 5, 7, 11, 13, 17, 19, 23, 'B*', $this->style);
        $this->assertEquals(
            '2.250000 w'."\n"
            .'1 J'."\n"
            .'2 j'."\n"
            .'8.250000 M'."\n"
            .'[3.750000 5.250000] 0.750000 d'."\n"
            .'0.678431 1.000000 0.184314 RG'."\n"
            .'0.250000 0.500000 0.750000 rg'."\n"
            .'2.250000 71.250000 m'."\n"
            .'5.250000 66.750000 9.750000 62.250000 14.250000 57.750000 c'."\n"
            .'B*'."\n",
            $res
        );
    }

    public function testGetPolycurve()
    {
        $segments = array(
            array(7, 11, 13, 17, 19, 23),
            array(29, 31, 37, 41, 43, 47),
        );

        $res = $this->obj->getPolycurve(3, 5, $segments);
        $this->assertEquals(
            '2.250000 71.250000 m'."\n"
            .'5.250000 66.750000 9.750000 62.250000 14.250000 57.750000 c'."\n"
            .'21.750000 51.750000 27.750000 44.250000 32.250000 39.750000 c'."\n"
            .'S'."\n",
            $res
        );

        $res = $this->obj->getPolycurve(3, 5, $segments, 'B*', $this->style);
        $this->assertEquals(
            '2.250000 w'."\n"
            .'1 J'."\n"
            .'2 j'."\n"
            .'8.250000 M'."\n"
            .'[3.750000 5.250000] 0.750000 d'."\n"
            .'0.678431 1.000000 0.184314 RG'."\n"
            .'0.250000 0.500000 0.750000 rg'."\n"
            .'2.250000 71.250000 m'."\n"
            .'5.250000 66.750000 9.750000 62.250000 14.250000 57.750000 c'."\n"
            .'21.750000 51.750000 27.750000 44.250000 32.250000 39.750000 c'."\n"
            .'B*'."\n",
            $res
        );
    }

    public function testGetEllipse()
    {
        $res = $this->obj->getEllipse(3, 5, 7, 0, 13, 61, 349);
        $this->assertEquals(
            '3.697096 76.296624 m'."\n"
            .'2.476319 76.646676 1.169043 76.542151 0.019397 76.002569 c'."\n"
            .'-1.130248 75.462987 -2.045949 74.524165 -2.556702 73.361424 c'."\n"
            .'-3.067455 72.198684 -3.139357 70.889209 -2.758978 69.677538 c'."\n"
            .'-2.378600 68.465867 -1.571192 67.432432 -0.487535 66.770223 c'."\n"
            .'0.596122 66.108014 1.884095 65.860988 3.135859 66.075278 c'."\n"
            .'4.387624 66.289567 5.520087 66.950946 6.321766 67.935905 c'."\n"
            .'7.123445 68.920865 7.541123 70.164022 7.496802 71.433222 c'."\n"
            .'S'."\n",
            $res
        );

        $res = $this->obj->getEllipse(3, 5, 7, 11, 13, 61, 349, 'B*', $this->style, 4);
        $this->assertEquals(
            '2.250000 w'."\n"
            .'1 J'."\n"
            .'2 j'."\n"
            .'8.250000 M'."\n"
            .'[3.750000 5.250000] 0.750000 d'."\n"
            .'0.678431 1.000000 0.184314 RG'."\n"
            .'0.250000 0.500000 0.750000 rg'."\n"
            .'4.210523 78.087155 m'."\n"
            .'3.610431 78.606045 2.973969 78.977524 2.330748 79.184310 c'."\n"
            .'1.687527 79.391096 1.047679 79.429932 0.440975 79.299009 c'."\n"
            .'-0.165730 79.168086 -0.729735 78.869468 -1.224798 78.417048 c'."\n"
            .'-1.719862 77.964629 -2.138186 77.365534 -2.460309 76.647637 c'."\n"
            .'-2.782431 75.929740 -3.003276 75.104350 -3.112570 74.209869 c'."\n"
            .'-3.221865 73.315388 -3.217885 72.365906 -3.100818 71.405599 c'."\n"
            .'-2.983751 70.445292 -2.755440 69.489287 -2.426508 68.582062 c'."\n"
            .'-2.097575 67.674838 -1.673202 66.830685 -1.173134 66.088880 c'."\n"
            .'-0.673065 65.347074 -0.105178 64.719300 0.504106 64.234767 c'."\n"
            .'1.113389 63.750233 1.754473 63.416572 2.397528 63.249307 c'."\n"
            .'3.040584 63.082042 3.675482 63.083808 4.272683 63.254523 c'."\n"
            .'4.869885 63.425238 5.419982 63.762213 5.897382 64.249769 c'."\n"
            .'6.374782 64.737326 6.771963 65.367784 7.070448 66.111811 c'."\n"
            .'7.368932 66.855838 7.564018 67.701714 7.646628 68.610083 c'."\n"
            .'7.729237 69.518453 7.698070 70.475006 7.554576 71.435240 c'."\n"
            .'B*'."\n",
            $res
        );
    }

    public function testGetCircle()
    {
        $res = $this->obj->getCircle(3, 5, 7, 61, 349);
        $this->assertEquals(
            '4.795251 75.841753 m'."\n"
            .'3.684506 76.457449 2.387223 76.649676 1.145663 76.382537 c'."\n"
            .'-0.095897 76.115398 -1.199317 75.406626 -1.958540 74.388581 c'."\n"
            .'-2.717762 73.370536 -3.082388 72.110797 -2.984325 70.844615 c'."\n"
            .'-2.886263 69.578433 -2.332021 68.389857 -1.425103 67.500851 c'."\n"
            .'-0.518184 66.611844 0.681209 66.081419 1.949096 66.008630 c'."\n"
            .'3.216982 65.935842 4.469198 66.325521 5.471898 67.104897 c'."\n"
            .'6.474597 67.884274 7.161220 69.001612 7.403543 70.248253 c'."\n"
            .'S'."\n",
            $res
        );

        $res = $this->obj->getCircle(3, 5, 7, 61, 349, 'B*', $this->style, 4);
        $this->assertEquals(
            '2.250000 w'."\n"
            .'1 J'."\n"
            .'2 j'."\n"
            .'8.250000 M'."\n"
            .'[3.750000 5.250000] 0.750000 d'."\n"
            .'0.678431 1.000000 0.184314 RG'."\n"
            .'0.250000 0.500000 0.750000 rg'."\n"
            .'4.795251 75.841753 m'."\n"
            .'4.244239 76.147184 3.642722 76.350953 3.019526 76.443297 c'."\n"
            .'2.396329 76.535640 1.761569 76.515058 1.145663 76.382537 c'."\n"
            .'0.529758 76.250017 -0.057295 76.007708 -0.587363 75.667224 c'."\n"
            .'-1.117431 75.326740 -1.581909 74.893607 -1.958540 74.388581 c'."\n"
            .'-2.335170 73.883556 -2.617839 73.314836 -2.793000 72.709674 c'."\n"
            .'-2.968161 72.104513 -3.032972 71.472735 -2.984325 70.844615 c'."\n"
            .'-2.935679 70.216495 -2.774366 69.602229 -2.508116 69.031254 c'."\n"
            .'-2.241866 68.460279 -1.875001 67.941864 -1.425103 67.500851 c'."\n"
            .'-0.975204 67.059838 -0.449574 66.703386 0.126598 66.448577 c'."\n"
            .'0.702769 66.193768 1.320130 66.044739 1.949096 66.008630 c'."\n"
            .'2.578061 65.972522 3.208421 66.049920 3.809968 66.237117 c'."\n"
            .'4.411515 66.424313 4.974484 66.718269 5.471898 67.104897 c'."\n"
            .'5.969311 67.491526 6.393094 67.964551 6.722938 68.501304 c'."\n"
            .'7.052782 69.038058 7.283333 69.629827 7.403543 70.248253 c'."\n"
            .'B*'."\n",
            $res
        );
    }

    public function testGetBasicPolygon()
    {
        $points = array(3, 5, 7, 11, 13, 17, 19, 23);

        $res = $this->obj->getBasicPolygon($points);
        $this->assertEquals(
            '2.250000 71.250000 m'."\n"
            .'5.250000 66.750000 l'."\n"
            .'9.750000 62.250000 l'."\n"
            .'14.250000 57.750000 l'."\n"
            .'S'."\n",
            $res
        );

        $res = $this->obj->getBasicPolygon($points, 'B*', $this->style);
        $this->assertEquals(
            '2.250000 w'."\n"
            .'1 J'."\n"
            .'2 j'."\n"
            .'8.250000 M'."\n"
            .'[3.750000 5.250000] 0.750000 d'."\n"
            .'0.678431 1.000000 0.184314 RG'."\n"
            .'0.250000 0.500000 0.750000 rg'."\n"
            .'2.250000 71.250000 m'."\n"
            .'5.250000 66.750000 l'."\n"
            .'9.750000 62.250000 l'."\n"
            .'14.250000 57.750000 l'."\n"
            .'B*'."\n",
            $res
        );
    }

    public function testGetPolygon()
    {
        $points = array(3, 5, 7, 11, 13, 17, 19, 23);

        $res = $this->obj->getPolygon(array(3, 5, 7, 11));
        $this->assertEquals('', $res);

        $res = $this->obj->getPolygon($points);
        $this->assertEquals(
            '2.250000 71.250000 m'."\n"
            .'5.250000 66.750000 l'."\n"
            .'S'."\n"
            .'5.250000 66.750000 m'."\n"
            .'9.750000 62.250000 l'."\n"
            .'S'."\n"
            .'9.750000 62.250000 m'."\n"
            .'14.250000 57.750000 l'."\n"
            .'S'."\n",
            $res
        );

        $res = $this->obj->getPolygon(
            $points,
            'b*',
            array('all' => $this->style, 0 => array('lineColor' => '#ff0000'))
        );
        $this->assertEquals(
            '2.250000 w'."\n"
            .'1 J'."\n"
            .'2 j'."\n"
            .'8.250000 M'."\n"
            .'[3.750000 5.250000] 0.750000 d'."\n"
            .'0.678431 1.000000 0.184314 RG'."\n"
            .'0.250000 0.500000 0.750000 rg'."\n"
            .'2.250000 71.250000 m'."\n"
            .'5.250000 66.750000 l'."\n"
            .'9.750000 62.250000 l'."\n"
            .'14.250000 57.750000 l'."\n"
            .'h f*'."\n"
            .'1.000000 0.000000 0.000000 RG'."\n"
            .'2.250000 71.250000 m'."\n"
            .'5.250000 66.750000 l'."\n"
            .'S'."\n"
            .'5.250000 66.750000 m'."\n"
            .'9.750000 62.250000 l'."\n"
            .'S'."\n"
            .'9.750000 62.250000 m'."\n"
            .'14.250000 57.750000 l'."\n"
            .'S'."\n"
            .'1.000000 0.000000 0.000000 RG'."\n"
            .'14.250000 57.750000 m'."\n"
            .'2.250000 71.250000 l'."\n"
            .'S'."\n",
            $res
        );
    }

    public function testGetRegularPolygon()
    {
        $res = $this->obj->getRegularPolygon(3, 5, 7, 2);
        $this->assertEquals('', $res);

        $res = $this->obj->getRegularPolygon(3, 5, 7, 5, 11);
        $this->assertEquals(
            '3.251747 66.096457 m'."\n"
            .'7.460867 70.610186 l'."\n"
            .'S'."\n"
            .'7.460867 70.610186 m'."\n"
            .'4.468746 76.008116 l'."\n"
            .'S'."\n"
            .'4.468746 76.008116 m'."\n"
            .'-1.589607 74.830491 l'."\n"
            .'S'."\n"
            .'-1.589607 74.830491 m'."\n"
            .'-2.341753 68.704749 l'."\n"
            .'S'."\n",
            $res
        );

        $res = $this->obj->getRegularPolygon(
            3,
            5,
            7,
            5,
            11,
            'b*',
            array('all' => $this->style, 0 => array('lineColor' => '#ff0000')),
            'f',
            array('fillColor' => '#cccccc')
        );
        $this->assertEquals(
            '0.800000 0.800000 0.800000 rg'."\n"
            .'7.500000 71.250000 m'."\n"
            .'7.500000 72.483995 7.064930 73.679340 6.271733 74.624635 c'."\n"
            .'5.478536 75.569930 4.376901 76.205960 3.161653 76.420241 c'."\n"
            .'1.946405 76.634522 0.693671 76.413631 -0.375000 75.796633 c'."\n"
            .'-1.443671 75.179636 -2.261335 74.205182 -2.683386 73.045606 c'."\n"
            .'-3.105437 71.886030 -3.105437 70.613970 -2.683386 69.454394 c'."\n"
            .'-2.261335 68.294818 -1.443671 67.320364 -0.375000 66.703367 c'."\n"
            .'0.693671 66.086369 1.946405 65.865478 3.161653 66.079759 c'."\n"
            .'4.376901 66.294040 5.478536 66.930070 6.271733 67.875365 c'."\n"
            .'7.064930 68.820660 7.500000 70.016005 7.500000 71.250000 c'."\n"
            .'f'."\n"
            .'2.250000 w'."\n"
            .'1 J'."\n"
            .'2 j'."\n"
            .'8.250000 M'."\n"
            .'[3.750000 5.250000] 0.750000 d'."\n"
            .'0.678431 1.000000 0.184314 RG'."\n"
            .'0.250000 0.500000 0.750000 rg'."\n"
            .'3.251747 66.096457 m'."\n"
            .'7.460867 70.610186 l'."\n"
            .'4.468746 76.008116 l'."\n"
            .'-1.589607 74.830491 l'."\n"
            .'-2.341753 68.704749 l'."\n"
            .'h f*'."\n"
            .'1.000000 0.000000 0.000000 RG'."\n"
            .'3.251747 66.096457 m'."\n"
            .'7.460867 70.610186 l'."\n"
            .'S'."\n"
            .'7.460867 70.610186 m'."\n"
            .'4.468746 76.008116 l'."\n"
            .'S'."\n"
            .'4.468746 76.008116 m'."\n"
            .'-1.589607 74.830491 l'."\n"
            .'S'."\n"
            .'-1.589607 74.830491 m'."\n"
            .'-2.341753 68.704749 l'."\n"
            .'S'."\n"
            .'1.000000 0.000000 0.000000 RG'."\n"
            .'-2.341753 68.704749 m'."\n"
            .'3.251747 66.096457 l'."\n"
            .'S'."\n",
            $res
        );
    }

    public function testGetStarPolygon()
    {
        $res = $this->obj->getStarPolygon(3, 5, 7, 1, 0);
        $this->assertEquals('', $res);

        $res = $this->obj->getStarPolygon(3, 5, 7, 11, 13);
        $this->assertEquals(
            '2.250000 66.000000 m'."\n"
            .'7.025568 69.069071 l'."\n"
            .'S'."\n"
            .'7.025568 69.069071 m'."\n"
            .'6.217685 74.688019 l'."\n"
            .'S'."\n"
            .'6.217685 74.688019 m'."\n"
            .'0.770904 76.287338 l'."\n"
            .'S'."\n"
            .'0.770904 76.287338 m'."\n"
            .'-2.946563 71.997153 l'."\n"
            .'S'."\n"
            .'-2.946563 71.997153 m'."\n"
            .'-0.588364 66.833419 l'."\n"
            .'S'."\n"
            .'-0.588364 66.833419 m'."\n"
            .'5.088364 66.833419 l'."\n"
            .'S'."\n"
            .'5.088364 66.833419 m'."\n"
            .'7.446563 71.997153 l'."\n"
            .'S'."\n"
            .'7.446563 71.997153 m'."\n"
            .'3.729096 76.287338 l'."\n"
            .'S'."\n"
            .'3.729096 76.287338 m'."\n"
            .'-1.717685 74.688019 l'."\n"
            .'S'."\n"
            .'-1.717685 74.688019 m'."\n"
            .'-2.525568 69.069071 l'."\n"
            .'S'."\n",
            $res
        );

        $res = $this->obj->getStarPolygon(
            3,
            5,
            7,
            11,
            13,
            61,
            'b*',
            array('all' => $this->style, 0 => array('lineColor' => '#ff0000')),
            'f',
            array('fillColor' => '#cccccc')
        );
        $this->assertEquals(
            '0.800000 0.800000 0.800000 rg'."\n"
            .'7.500000 71.250000 m'."\n"
            .'7.500000 72.483995 7.064930 73.679340 6.271733 74.624635 c'."\n"
            .'5.478536 75.569930 4.376901 76.205960 3.161653 76.420241 c'."\n"
            .'1.946405 76.634522 0.693671 76.413631 -0.375000 75.796633 c'."\n"
            .'-1.443671 75.179636 -2.261335 74.205182 -2.683386 73.045606 c'."\n"
            .'-3.105437 71.886030 -3.105437 70.613970 -2.683386 69.454394 c'."\n"
            .'-2.261335 68.294818 -1.443671 67.320364 -0.375000 66.703367 c'."\n"
            .'0.693671 66.086369 1.946405 65.865478 3.161653 66.079759 c'."\n"
            .'4.376901 66.294040 5.478536 66.930070 6.271733 67.875365 c'."\n"
            .'7.064930 68.820660 7.500000 70.016005 7.500000 71.250000 c'."\n"
            .'f'."\n"
            .'2.250000 w'."\n"
            .'1 J'."\n"
            .'2 j'."\n"
            .'8.250000 M'."\n"
            .'[3.750000 5.250000] 0.750000 d'."\n"
            .'0.678431 1.000000 0.184314 RG'."\n"
            .'0.250000 0.500000 0.750000 rg'."\n"
            .'6.841753 68.704749 m'."\n"
            .'6.472725 74.369471 l'."\n"
            .'1.166613 76.387000 l'."\n"
            .'-2.872835 72.398504 l'."\n"
            .'-0.922818 67.067211 l'."\n"
            .'4.736763 66.626310 l'."\n"
            .'7.488895 71.591288 l'."\n"
            .'4.115869 76.157243 l'."\n"
            .'-1.438675 74.985796 l'."\n"
            .'-2.680531 69.446569 l'."\n"
            .'1.842242 66.015859 l'."\n"
            .'h f*'."\n"
            .'1.000000 0.000000 0.000000 RG'."\n"
            .'6.841753 68.704749 m'."\n"
            .'6.472725 74.369471 l'."\n"
            .'S'."\n"
            .'6.472725 74.369471 m'."\n"
            .'1.166613 76.387000 l'."\n"
            .'S'."\n"
            .'1.166613 76.387000 m'."\n"
            .'-2.872835 72.398504 l'."\n"
            .'S'."\n"
            .'-2.872835 72.398504 m'."\n"
            .'-0.922818 67.067211 l'."\n"
            .'S'."\n"
            .'-0.922818 67.067211 m'."\n"
            .'4.736763 66.626310 l'."\n"
            .'S'."\n"
            .'4.736763 66.626310 m'."\n"
            .'7.488895 71.591288 l'."\n"
            .'S'."\n"
            .'7.488895 71.591288 m'."\n"
            .'4.115869 76.157243 l'."\n"
            .'S'."\n"
            .'4.115869 76.157243 m'."\n"
            .'-1.438675 74.985796 l'."\n"
            .'S'."\n"
            .'-1.438675 74.985796 m'."\n"
            .'-2.680531 69.446569 l'."\n"
            .'S'."\n"
            .'-2.680531 69.446569 m'."\n"
            .'1.842242 66.015859 l'."\n"
            .'S'."\n"
            .'1.000000 0.000000 0.000000 RG'."\n"
            .'1.842242 66.015859 m'."\n"
            .'6.841753 68.704749 l'."\n"
            .'S'."\n",
            $res
        );
    }

    public function testGetBasicRect()
    {
        $res = $this->obj->getBasicRect(3, 5, 7, 11);
        $this->assertEquals(
            '2.250000 71.250000 5.250000 -8.250000 re'."\n"
            .'S'."\n",
            $res
        );

        $res = $this->obj->getBasicRect(3, 5, 7, 11, 'b*', $this->style);
        $this->assertEquals(
            '2.250000 w'."\n"
            .'1 J'."\n"
            .'2 j'."\n"
            .'8.250000 M'."\n"
            .'[3.750000 5.250000] 0.750000 d'."\n"
            .'0.678431 1.000000 0.184314 RG'."\n"
            .'0.250000 0.500000 0.750000 rg'."\n"
            .'2.250000 71.250000 5.250000 -8.250000 re'."\n"
            .'b*'."\n",
            $res
        );
    }

    public function testGetRect()
    {
        $res = $this->obj->getRect(3, 5, 7, 11);
        $this->assertEquals(
            '2.250000 71.250000 m'."\n"
            .'7.500000 71.250000 l'."\n"
            .'S'."\n"
            .'7.500000 71.250000 m'."\n"
            .'7.500000 63.000000 l'."\n"
            .'S'."\n"
            .'7.500000 63.000000 m'."\n"
            .'2.250000 63.000000 l'."\n"
            .'S'."\n"
            .'2.250000 63.000000 m'."\n"
            .'2.250000 71.250000 l'."\n"
            .'S'."\n",
            $res
        );

        $res = $this->obj->getRect(
            3,
            5,
            7,
            11,
            'b*',
            array('all' => $this->style, 1 => array('lineColor' => '#ff0000'))
        );
        $this->assertEquals(
            '2.250000 w'."\n"
            .'1 J'."\n"
            .'2 j'."\n"
            .'8.250000 M'."\n"
            .'[3.750000 5.250000] 0.750000 d'."\n"
            .'0.678431 1.000000 0.184314 RG'."\n"
            .'0.250000 0.500000 0.750000 rg'."\n"
            .'2.250000 71.250000 m'."\n"
            .'7.500000 71.250000 l'."\n"
            .'7.500000 63.000000 l'."\n"
            .'2.250000 63.000000 l'."\n"
            .'2.250000 71.250000 l'."\n"
            .'h f*'."\n"
            .'2.250000 71.250000 m'."\n"
            .'7.500000 71.250000 l'."\n"
            .'S'."\n"
            .'1.000000 0.000000 0.000000 RG'."\n"
            .'7.500000 71.250000 m'."\n"
            .'7.500000 63.000000 l'."\n"
            .'S'."\n"
            .'7.500000 63.000000 m'."\n"
            .'2.250000 63.000000 l'."\n"
            .'S'."\n"
            .'2.250000 63.000000 m'."\n"
            .'2.250000 71.250000 l'."\n"
            .'S'."\n",
            $res
        );
    }

    public function testGetRoundedRect()
    {
        $res = $this->obj->getRoundedRect(3, 5, 137, 241, 13, 17);
        $this->assertEquals(
            '12.000000 71.250000 m'."\n"
            .'95.250000 71.250000 l'."\n"
            .'100.634776 71.250000 105.000000 65.541631 105.000000 58.500000 c'."\n"
            .'105.000000 -96.750000 l'."\n"
            .'105.000000 -103.791631 100.634776 -109.500000 95.250000 -109.500000 c'."\n"
            .'12.000000 -109.500000 l'."\n"
            .'6.615224 -109.500000 2.250000 -103.791631 2.250000 -96.750000 c'."\n"
            .'2.250000 58.500000 l'."\n"
            .'2.250000 65.541631 6.615224 71.250000 12.000000 71.250000 c'."\n"
            .'S'."\n",
            $res
        );

        $res = $this->obj->getRoundedRect(3, 5, 137, 241, 13, 17, '0000');
        $this->assertEquals(
            '2.250000 71.250000 102.750000 -180.750000 re'."\n"
            .'S'."\n",
            $res
        );

        $res = $this->obj->getRoundedRect(3, 5, 137, 241, 13, 17, '1010', 'b*', $this->style);
        $this->assertEquals(
            '2.250000 w'."\n"
            .'1 J'."\n"
            .'2 j'."\n"
            .'8.250000 M'."\n"
            .'[3.750000 5.250000] 0.750000 d'."\n"
            .'0.678431 1.000000 0.184314 RG'."\n"
            .'0.250000 0.500000 0.750000 rg'."\n"
            .'12.000000 71.250000 m'."\n"
            .'95.250000 71.250000 l'."\n"
            .'100.634776 71.250000 105.000000 65.541631 105.000000 58.500000 c'."\n"
            .'105.000000 -96.750000 l'."\n"
            .'105.000000 -109.500000 l'."\n"
            .'12.000000 -109.500000 l'."\n"
            .'6.615224 -109.500000 2.250000 -103.791631 2.250000 -96.750000 c'."\n"
            .'2.250000 58.500000 l'."\n"
            .'2.250000 71.250000 l'."\n"
            .'12.000000 71.250000 l'."\n"
            .'b*'."\n",
            $res
        );

        $res = $this->obj->getRoundedRect(3, 5, 137, 241, 13, 17, '0101');
        $this->assertEquals(
            '12.000000 71.250000 m'."\n"
            .'95.250000 71.250000 l'."\n"
            .'105.000000 71.250000 l'."\n"
            .'105.000000 -96.750000 l'."\n"
            .'105.000000 -103.791631 100.634776 -109.500000 95.250000 -109.500000 c'."\n"
            .'12.000000 -109.500000 l'."\n"
            .'2.250000 -109.500000 l'."\n"
            .'2.250000 58.500000 l'."\n"
            .'2.250000 65.541631 6.615224 71.250000 12.000000 71.250000 c'."\n"
            .'S'."\n",
            $res
        );
    }

    public function testGetArrow()
    {
        $res = $this->obj->getArrow(3, 5, 7, 11);
        $this->assertEquals(
            '2.250000 71.250000 m'."\n"
            .'5.250000 66.750000 l'."\n"
            .'S'."\n"
            .'4.048317 70.302247 m'."\n"
            .'5.250000 66.750000 l'."\n"
            .'2.433189 69.225495 l'."\n"
            .'S'."\n",
            $res
        );

        $res = $this->obj->getArrow(3, 5, 7, 11, 1, 6, 17, $this->style);
        $this->assertEquals(
            '2.250000 w'."\n"
            .'1 J'."\n"
            .'2 j'."\n"
            .'8.250000 M'."\n"
            .'[3.750000 5.250000] 0.750000 d'."\n"
            .'0.678431 1.000000 0.184314 RG'."\n"
            .'0.250000 0.500000 0.750000 rg'."\n"
            .'2.250000 71.250000 m'."\n"
            .'4.001925 68.622113 l'."\n"
            .'S'."\n"
            .'2.250000 w'."\n"
            .'1 J'."\n"
            .'2 j'."\n"
            .'8.250000 M'."\n"
            .'[3.750000 5.250000] 0.750000 d'."\n"
            .'0.678431 1.000000 0.184314 RG'."\n"
            .'0.250000 0.500000 0.750000 rg'."\n"
            .'3.957625 71.060425 m'."\n"
            .'5.250000 66.750000 l'."\n"
            .'1.768213 69.600818 l'."\n"
            .'s'."\n",
            $res
        );

        $res = $this->obj->getArrow(3, 5, 7, 11, 2, 6, 17, array());
        $this->assertEquals(
            '2.250000 71.250000 m'."\n"
            .'3.308549 69.662176 l'."\n"
            .'S'."\n"
            .'3.957625 71.060425 m'."\n"
            .'5.250000 66.750000 l'."\n"
            .'1.768213 69.600818 l'."\n"
            .'b'."\n",
            $res
        );

        $res = $this->obj->getArrow(3, 5, 7, 11, 3, 6, 17, array());
        $this->assertEquals(
            '2.250000 71.250000 m'."\n"
            .'3.308549 69.662176 l'."\n"
            .'S'."\n"
            .'3.957625 71.060425 m'."\n"
            .'5.250000 66.750000 l'."\n"
            .'1.768213 69.600818 l'."\n"
            .'f'."\n",
            $res
        );
    }
}
